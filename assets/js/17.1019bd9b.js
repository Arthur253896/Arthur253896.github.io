(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{294:function(a,t,e){"use strict";e.r(t);var r=e(14),s=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"解压命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解压命令"}},[a._v("#")]),a._v(" 解压命令")]),a._v(" "),t("h2",{attrs:{id:"tar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar"}},[a._v("#")]),a._v(" tar")]),a._v(" "),t("p",[a._v("解压： tar xvf FileName.tar\n打包： tar cvf FName.tar DirName\n(tar是打包不是压缩！)")]),a._v(" "),t("h2",{attrs:{id:"gz"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gz"}},[a._v("#")]),a._v(" .gz")]),a._v(" "),t("p",[a._v("解压1： gunzip FN.gz\n解压2: gzip -d FN.gz\n压缩： gzip FN")]),a._v(" "),t("h2",{attrs:{id:"tar-gz-and-tgz"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-gz-and-tgz"}},[a._v("#")]),a._v(" .tar.gz and .tgz")]),a._v(" "),t("p",[a._v("解压： tar zxvf FN.tar.gz\n压缩： tar zcvf FN.tar.gz DirName")]),a._v(" "),t("h2",{attrs:{id:"bz2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bz2"}},[a._v("#")]),a._v(" .bz2")]),a._v(" "),t("p",[a._v("1： bzip -d FN.bz2\n2: bunzip FN.bz2\n压缩： bzip2 -z FN")]),a._v(" "),t("h2",{attrs:{id:"tar-bz2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-bz2"}},[a._v("#")]),a._v(" .tar.bz2")]),a._v(" "),t("p",[a._v("解压：tar jxvf FileName.tar.bz2\n压缩：tar jcvf FileName.tar.bz2 DirName")]),a._v(" "),t("h2",{attrs:{id:"bz"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bz"}},[a._v("#")]),a._v(" .bz")]),a._v(" "),t("p",[a._v("解压1：bzip2 -d FileName.bz\n解压2：bunzip2 FileName.bz")]),a._v(" "),t("h2",{attrs:{id:"tar-bz"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-bz"}},[a._v("#")]),a._v(" .tar.bz")]),a._v(" "),t("p",[a._v("解压：tar jxvf FileName.tar.bz")]),a._v(" "),t("h1",{attrs:{id:"deb-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deb-安装"}},[a._v("#")]),a._v(" deb 安装")]),a._v(" "),t("h2",{attrs:{id:"使用dpkg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用dpkg"}},[a._v("#")]),a._v(" 使用dpkg")]),a._v(" "),t("p",[a._v('sudo dpkg -i ""')]),a._v(" "),t("h2",{attrs:{id:"apt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apt"}},[a._v("#")]),a._v(" apt")]),a._v(" "),t("p",[a._v('sudo apt install ""')]),a._v(" "),t("h1",{attrs:{id:"root-权限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#root-权限"}},[a._v("#")]),a._v(" root 权限")]),a._v(" "),t("p",[a._v("sudo -i 临时权限\nsu 永久权限")]),a._v(" "),t("h1",{attrs:{id:"tail命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tail命令"}},[a._v("#")]),a._v(" tail命令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("tail -x /location\n")])])]),t("p",[a._v("显示文件的最后x行")]),a._v(" "),t("h1",{attrs:{id:"编写makefile文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写makefile文件"}},[a._v("#")]),a._v(" 编写Makefile文件")]),a._v(" "),t("p",[a._v("Makefile由一组规则组成：\ntarget...:prerequisites...\ncommand1\ncommand2\n...\n例如：\nmain:main.o stack.o maze.o\ngcc main.o stack.o maze.o -o main\nmain是这条规则的目标，main.o、stack.o和maze.o是这条规则的条件标和条件之间的关系是：欲更新目标，必须首先更新它的所有条件；所有条件中只要有一个条件被更新了，目标也必须随之被更新。所谓“更新”就是执行一遍规则中的命令列表，命令列表中的每条命令必须以一个Tab开头，注意不能是空格，Makefile的格式不像C语言的缩进那么随意，对于Makefile中的每个以Tab开头的命令，make会创建一个Shell进程去执行它。")]),a._v(" "),t("p",[a._v("对于上面这个例子，make执行如下步骤：")]),a._v(" "),t("ol",[t("li",[a._v("Makefile        main")])]),a._v(" "),t("p",[a._v("尝试更新中第一条规则的目标，第一条规则的目标称为缺省目标，只要缺省目标更新了就算完成任务了，其它工作都是为这个目的而做的。由于我们是第一次编译，main文件还没生成，显然需要更新，但规则说必须先更新了main.o、stack.o和maze.o这三个条件，然后才能更新main。")]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("所以make会进一步查找以这三个条件为目标的规则，这些目标文件也没有生成，也需要更新，所以执行相应的命令（gcc -c main.c、gcc -c stack.c和gcc -c maze.c）更新它们。")]),a._v(" "),t("li",[a._v("最后执行gcc main.o stack.o maze.o -o main更新main。")])]),a._v(" "),t("h2",{attrs:{id:"如何简便的写makefile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何简便的写makefile"}},[a._v("#")]),a._v(" 如何简便的写makefile？")]),a._v(" "),t("p",[a._v("一个目标依赖的所有条件不一定非得写在一条规则中，也可以拆开写，例如：\nmain.o: main.h stack.h maze.h\nmain.o: main.c\ngcc -c main.c\n就相当于：\nmain.o: main.c main.h stack.h maze.h\ngcc -c main.c")]),a._v(" "),t("p",[a._v("把冗长的makefile可以写成：\nmain: main.o stack.o maze.o\ngcc main.o stack.o maze.o -o main\nmain.o:main.h stack.h maze.h\nstack.o:stack.h main.h\nmaze.o:maze.h main.h")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("clean:-rm main *.o\n.PHONY:clean\n")])])]),t("h1",{attrs:{id:"解决虚拟机网络不见的原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决虚拟机网络不见的原因"}},[a._v("#")]),a._v(" 解决虚拟机网络不见的原因")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("sudo nmcli network off\nsudo nmcli network on\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);